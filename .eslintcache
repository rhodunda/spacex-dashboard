[{"/Users/bryanrhodunda/Development/spaceX/spacex-dashboard/src/index.js":"1","/Users/bryanrhodunda/Development/spaceX/spacex-dashboard/src/App.js":"2","/Users/bryanrhodunda/Development/spaceX/spacex-dashboard/src/reportWebVitals.js":"3","/Users/bryanrhodunda/Development/spaceX/spacex-dashboard/src/Hoc/Layout.js":"4","/Users/bryanrhodunda/Development/spaceX/spacex-dashboard/src/food.js":"5","/Users/bryanrhodunda/Development/spaceX/spacex-dashboard/src/snake.js":"6","/Users/bryanrhodunda/Development/spaceX/spacex-dashboard/src/Hoc/Grid.js":"7"},{"size":500,"mtime":1608095576725,"results":"8","hashOfConfig":"9"},{"size":203,"mtime":1610083193688,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1608095576726,"results":"11","hashOfConfig":"9"},{"size":260,"mtime":1609823941099,"results":"12","hashOfConfig":"9"},{"size":164,"mtime":1608143801132,"results":"13","hashOfConfig":"9"},{"size":1982,"mtime":1609997528169,"results":"14","hashOfConfig":"9"},{"size":1224,"mtime":1610083191940,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1t80gqq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bryanrhodunda/Development/spaceX/spacex-dashboard/src/index.js",[],["33","34"],"/Users/bryanrhodunda/Development/spaceX/spacex-dashboard/src/App.js",[],"/Users/bryanrhodunda/Development/spaceX/spacex-dashboard/src/reportWebVitals.js",[],"/Users/bryanrhodunda/Development/spaceX/spacex-dashboard/src/Hoc/Layout.js",[],["35","36"],"/Users/bryanrhodunda/Development/spaceX/spacex-dashboard/src/food.js",[],"/Users/bryanrhodunda/Development/spaceX/spacex-dashboard/src/snake.js",["37","38"],"import React, { Component } from 'react'\nimport styles from './snake.module.css'\n\nclass snake extends Component {\n    state = {\n        length: 0,\n        modifier: 55,\n        head: [],\n        position: {\n            up: -10,\n            left: 160,\n        },\n        currentDirection: \"down\"\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', event => { \n\n            switch(event.keyCode) {\n            case 37:\n\n                let updatedLeft = this.state.position.left - this.state.modifier\n                let updatedL = {\n                    up: this.state.up,\n                    left: updatedLeft,\n                    // Up: this.state.up,\n                    // down: this.state.down\n                }\n                this.setState({position: updatedL})\n                \n                break;\n\n            case 38:\n                let updatedUp = this.state.position.up - this.state.modifier\n                let updatedU = {\n                    top: updatedUp,\n                    left: this.state.left,\n                }\n                this.setState({position: updatedU})\n                break;\n\n            case 39:\n                let updatedRight = this.state.position.left + this.state.modifier\n                let updatedR = {\n                    top: this.state.up,\n                    left: updatedRight,\n                }\n                this.setState({position: updatedR})\n                break;\n            case 40:\n                let updatedDown = this.state.position.up + this.state.modifier\n                let updatedD = {\n                    top: updatedDown ,\n                    left: this.state.left,\n                }\n                this.setState({position: updatedD})\n                break;\n\n\n            }\n        })\n    }\n\n\n    render() {\n\n        \n    return (\n        <div className={styles.snake} style={{up : this.state.position.up}, {left : this.state.position.left}}></div>\n    )\n    }\n}\n\n\nexport default snake","/Users/bryanrhodunda/Development/spaceX/spacex-dashboard/src/Hoc/Grid.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"39","replacedBy":"43"},{"ruleId":"41","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":19,"column":13,"nodeType":"47","messageId":"48","endLine":60,"endColumn":14},{"ruleId":"49","severity":1,"message":"50","line":69,"column":75,"nodeType":"51","messageId":"52","endLine":69,"endColumn":76},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],["53"],["54"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]